import{_ as e,c as o,o as t,a,b as s}from"./app.23517c4e.js";const _=JSON.parse('{"title":"animateTransform元素","description":"","frontmatter":{"title":"animateTransform元素"},"headers":[{"level":2,"title":"animateTransform 动画元素","slug":"animatetransform-动画元素","link":"#animatetransform-动画元素","children":[]},{"level":2,"title":"set 元素","slug":"set-元素","link":"#set-元素","children":[]}],"relativePath":"svg/animation/svg-animation-transformations.md","lastUpdated":1673837579000}'),n={name:"svg/animation/svg-animation-transformations.md"},l=a(`<p>这是 <a href="https://css-tricks.com/guide-svg-animations-smil/#aa-animating-transformations-the-animatetransform-animatetransform-element" target="_blank" rel="noreferrer">A Guide to SVG Animations (SMIL)</a> 的部分内容5，也是最后一部分。</p><h2 id="animatetransform-动画元素" tabindex="-1">animateTransform 动画元素 <a class="header-anchor" href="#animatetransform-动画元素" aria-hidden="true">#</a></h2><p>📚 可以使用 <code>&lt;animateTransform&gt;</code> 元素对 <code>translate, scale, rotate, skewX, skewY</code> 属性进行动画：</p><ul><li>它使用 <code>type</code> 定义需要transform的属性，eg <code>type=&quot;translate&quot;</code></li></ul><p>而 <code>from &amp; to</code> 的写法根据 <code>type</code> 的不同而不同：</p><ul><li><code>type=&quot;translate&quot;</code> - 写法为 <code>&lt;tx&gt;</code> | <code>&lt;tx&gt; &lt;ty&gt;</code> 如果只写一个值，则表示只有x轴移动</li><li><code>type=&quot;scale&quot;</code> - 写法为 <code>&lt;sx&gt; [,&lt;sy&gt;]</code> | <code>&lt;sx&gt; &lt;sy&gt;</code> 如果只写一个值，则表示x,y同时缩放</li><li><code>type=&quot;rotate&quot;</code> - 写法为 <code>&lt;rotate-angle&gt; [&lt;cx&gt; &lt;cy&gt;]</code> 或者 <code>&lt;rotate-angle&gt; &lt;cx&gt; &lt;cy&gt;</code> 如果只写一个值，则表示旋转的中心为viewport坐标系的原点</li><li><code>type=&quot;skewX&quot; | type=&quot;skewY&quot;</code> - 写法为 <code>&lt;skew-angle&gt;</code></li></ul><p>🌰 假设我们想矩形沿着自己的中心旋转 <code>360°</code> ：<a href="https://codepen.io/JamesSawyer/pen/OJEjyeB" target="_blank" rel="noreferrer">animateTransform动画元素 - @codepen</a></p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-palenight has-highlighted-lines"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">rect</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">rect</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">width</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">50</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">height</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">50</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">x</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">50</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">y</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">50</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">fill</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">deepPink</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">animateTransform</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">xlink:href</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">#rect</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line highlighted"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">attributeName</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">transform</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">attributeType</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">XML</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line highlighted"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">rotate</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line highlighted"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">from</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0 75 75</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line highlighted"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">to</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">360 75 75</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">dur</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2s</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">begin</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0s</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">repeatCount</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">indefinite</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">fill</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">freeze</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">  /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">rect</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>其中 <code>from=&quot;360 75 75&quot;</code> 表示以 <code>(75,75)</code> 为中心进行旋转（这里即矩形的中心）</p>`,9),p=s("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"#18-1 textPath startOffset路径动画",src:"https://codepen.io/JamesSawyer/embed/preview/OJEjyeB?default-tab=result&editable=true&theme-id=dark",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href="https://codepen.io/JamesSawyer/pen/OJEjyeB">
  #18-1 textPath startOffset路径动画</a> by james sawyer (<a href="https://codepen.io/JamesSawyer">@JamesSawyer</a>)
  on <a href="https://codepen.io">CodePen</a>.
`,-1),r=a('<div class="tip custom-block"><p class="custom-block-title">TIP</p><p>对于Transform SVGs，还是推荐直接使用CSS，这样更加的简单。</p><p>对于SVG 坐标系的转换，可以参考： <a href="http://sarasoueidan.com/blog/svg-transformations/" target="_blank" rel="noreferrer">Understanding SVG Coordinate Systems and Transformaions Part2 - transform Attribute</a></p></div><h2 id="set-元素" tabindex="-1">set 元素 <a class="header-anchor" href="#set-元素" aria-hidden="true">#</a></h2><p><code>&lt;set&gt;</code> 元素提供了对特性设置值的效果，它不提供动画效果😁。</p><ul><li>由于用于在特定时间将元素设置为特定值，因此它不接受前面提到的所有动画元素的属性。例如，它没有from或by属性，因为更改的值不会随着时间的推移而逐步更改；</li><li>对于<code>set</code>，你可以指定你的目标元素、属性名称和类型、to值，动画时间可以通过:begin, dur, end, min, max, restart, repeatCount, repeatDur和fill来控制；</li></ul><p>🌰下面的示例在单击旋转矩形时将其颜色设置为蓝色。颜色在3秒内保持蓝色，然后又变回原来的颜色。每次单击矩形时，都会触发设置的动画，颜色会改变三秒钟</p><p><a href="https://codepen.io/JamesSawyer/pen/OJEjMPa" target="_blank" rel="noreferrer">set设置动画属性</a></p>',6),c=s("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"#19 animateTransform动画元素",src:"https://codepen.io/JamesSawyer/embed/preview/OJEjMPa?default-tab=result&editable=true&theme-id=dark",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href="https://codepen.io/JamesSawyer/pen/OJEjMPa">
  #19 animateTransform动画元素</a> by james sawyer (<a href="https://codepen.io/JamesSawyer">@JamesSawyer</a>)
  on <a href="https://codepen.io">CodePen</a>.
`,-1),i=s("p",null,"2022年11月15日17:15:37",-1),D=[l,p,r,c,i];function y(F,d,m,u,h,f){return t(),o("div",null,D)}const q=e(n,[["render",y]]);export{_ as __pageData,q as default};
